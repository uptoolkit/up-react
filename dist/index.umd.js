(function(e,i){typeof exports=="object"&&typeof module<"u"?i(exports,require("react/jsx-runtime"),require("react"),require("js-config-helper"),require("axios"),require("js-form-helper"),require("i18next"),require("react-i18next"),require("@apollo/client")):typeof define=="function"&&define.amd?define(["exports","react/jsx-runtime","react","js-config-helper","axios","js-form-helper","i18next","react-i18next","@apollo/client"],i):(e=typeof globalThis<"u"?globalThis:e||self,i(e["use-up"]={},e.jsxRuntime,e.React,e.Config,e.axios,e.Form,e.i18next,e.reactI18next,e.apolloClient))})(this,function(e,i,a,v,C,p,j,y,c){"use strict";const h=n=>n&&typeof n=="object"&&"default"in n?n:{default:n},U=h(C),f=h(j);let s,d,t,w,x,g;e.exported=void 0,e.UpInit=!1;const q=async function(u){t=new v.Config(u),d=t.get("override.http")||U.default.create(),s=t.get("override")||U.default.create({baseURL:t.get("api.url")}),t.has("exclude.form")||(x=function(o,r){return new p.Form(o,{http:d,...r})},g=function(o,r){return new p.Form(o,{http:s,...r})}),t.has("exclude.i18n")||u.i18n&&await f.default.use(y.initReactI18next).init(u.i18n);let l;return t.has("exclude.graphql")||(t.has("graphql.client")?l=t.get("graphql.client"):l=new c.ApolloClient({uri:u.graphql.url,cache:new c.InMemoryCache})),e.exported={config:t,api:s,http:d,i18n:f.default,form:x,formApi:g,store:w,graphqlClient:l,t:f.default.t},t.has("debug")&&console.log("\u2934 useUp() accessible vars :",e.exported),e.UpInit=!0,e.exported},I=function(){return e.UpInit||console.warn("Up is not initialized, you must run setUp() first or add an UpProvider !"),e.exported},m=a.createContext({});function _({options:n,children:u}){const[l,o]=a.useState(!0),[r,P]=a.useState(),S=async()=>{const A=await q(n);P(A),o(!1)};return a.useEffect(()=>{S().then(()=>console.log("loaded"))},[]),r?i.jsx(m.Provider,{value:r,children:i.jsx(c.ApolloProvider,{client:r.graphqlClient,children:u})}):i.jsx(i.Fragment,{})}e.UpContext=m,e.UpProvider=_,e.setUp=q,e.useUp=I,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
